{
    "name": "wbrframe/parkovochka",
    "type": "project",
    "license": "proprietary",
    "description": "Finding the nearest parking for your bike",
    "minimum-stability": "stable",
    "prefer-stable": true,
    "require": {
        "php": ">=8.2.6",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "creof/doctrine2-spatial": "^1.2",
        "doctrine/doctrine-bundle": "^2.10",
        "doctrine/doctrine-fixtures-bundle": "*",
        "doctrine/doctrine-migrations-bundle": "^3.2",
        "doctrine/orm": "^2.15",
        "gedmo/doctrine-extensions": "^3.11",
        "jsor/doctrine-postgis": "^2.2",
        "phpdocumentor/reflection-docblock": "^5.3",
        "phpstan/phpdoc-parser": "^1.22",
        "stfalcon-studio/swagger-bundle": "^0.14.1",
        "symfony/asset": "6.3.*",
        "symfony/console": "6.3.*",
        "symfony/dotenv": "6.3.*",
        "symfony/flex": "^2",
        "symfony/framework-bundle": "6.3.*",
        "symfony/property-access": "6.3.*",
        "symfony/property-info": "6.3.*",
        "symfony/runtime": "^6.3",
        "symfony/serializer": "6.3.*",
        "symfony/translation": "6.3.*",
        "symfony/twig-bundle": "6.3.*",
        "symfony/uid": "6.3.*",
        "symfony/validator": "6.3.*",
        "symfony/yaml": "6.3.*"
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": true,
            "symfony/flex": true,
            "symfony/runtime": true
        },
        "preferred-install": {
            "*": "dist"
        },
        "optimize-autoloader": true,
        "process-timeout": 0,
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*",
        "symfony/polyfill-php81": "*"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "ci:pack": [
            "@ci:composer-validate",
            "@ci:security-check",
            "@ci:doctrine-schema-validate",
            "@ci:yaml-lint",
            "@ci:code-style",
            "@ci:static-analysis",
            "@ci:phpunit"
        ],
        "ci:composer-validate": "@composer validate --no-check-all --strict",
        "ci:security-check": "/usr/local/bin/security-checker --path=composer.lock",
        "ci:doctrine-schema-validate": "bin/console doctrine:schema:validate",
        "ci:doctrine-migrations-diff": "bin/console doctrine:migrations:diff",
        "ci:doctrine-migrations-migrate": "bin/console doctrine:migrations:migrate -n",
        "ci:doctrine-migrations-generate": "bin/console doctrine:migrations:generate",
        "ci:doctrine-fixtures-load": "bin/console doctrine:fixtures:load -n",
        "ci:twig-lint": "bin/console lint:twig templates/",
        "ci:yaml-lint": [
            "bin/console lint:yaml --parse-tags config/",
            "bin/console lint:yaml --parse-tags translations/"
        ],
        "ci:phpunit": "vendor/bin/phpunit -c phpunit.xml.dist",
        "ci:phpunit-with-coverage": "export XDEBUG_MODE=coverage && vendor/bin/phpunit -c phpunit.xml.dist --coverage-text --colors=never --coverage-xml=./phpunit-coverage.xml --coverage-clover=./var/cache/clover-coverage.xml --log-junit=./var/cache/junit.xml",
        "ci:code-style": [
            "vendor/bin/phpcs --standard=phpcs.xml",
            "vendor/bin/php-cs-fixer fix --dry-run --config=.php-cs-fixer.php -v"
        ],
        "ci:code-style-fix": [
            "vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php -v"
        ],
        "ci:static-analysis": [
            "vendor/bin/phpstan analyse --no-progress -c phpstan.neon"
        ],
        "app:recreate-database": [
            "bin/console doctrine:database:create --if-not-exists",
            "bin/console doctrine:query:sql \"DROP SCHEMA public CASCADE; CREATE SCHEMA public;\"",
            "bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration",
            "bin/console doctrine:schema:validate",
            "echo DONE"
        ]
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "symfony": {
            "allow-contrib": true,
            "require": "6.3.*",
            "docker": true
        }
    },
    "require-dev": {
        "escapestudios/symfony2-coding-standard": "^3.13",
        "fakerphp/faker": "^1.23",
        "friendsofphp/php-cs-fixer": "^3.21",
        "jetbrains/phpstorm-attributes": "^1.0",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-deprecation-rules": "^1.1",
        "phpstan/phpstan-doctrine": "^1.3",
        "phpstan/phpstan-phpunit": "^1.3",
        "phpstan/phpstan-strict-rules": "^1.5",
        "phpstan/phpstan-symfony": "^1.3",
        "phpunit/phpunit": "^9.5",
        "symfony/browser-kit": "6.3.*",
        "symfony/css-selector": "6.3.*",
        "symfony/phpunit-bridge": "^6.3",
        "thecodingmachine/phpstan-strict-rules": "^1.0"
    }
}
